{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/components/TextToSpeech.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"TextToSpeech-module__MZPX2W__container\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/josephhong/The%20Art%20of%20Optimism/affirmations-app/components/TextToSpeech.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef } from \"react\";\nimport styles from \"./TextToSpeech.module.css\";\n\nexport default function TextToSpeech() {\n\t// State for the text input\n\tconst [text, setText] = useState(\"\");\n\t// State to indicate loading status\n\tconst [loading, setLoading] = useState(false);\n\t// State to store error messages\n\tconst [error, setError] = useState(\"\");\n\t// Ref to access the audio element directly\n\tconst audioRef = useRef(null);\n\n\t// Handles the Play button click event\n\tconst handlePlay = async () => {\n\t\t// If input is empty, show error and exit\n\t\tif (!text.trim()) {\n\t\t\tsetError(\"Please enter an affirmation.\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true); // Show loading state\n\t\tsetError(\"\"); // Clear previous errors\n\n\t\ttry {\n\t\t\t// Send POST request to API with the input text\n\t\t\tconst res = await fetch(\"/api/text-to-speech\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({ text }),\n\t\t\t});\n\n\t\t\t// If response is not OK, extract and throw error\n\t\t\tif (!res.ok) {\n\t\t\t\tconst { error } = await res\n\t\t\t\t\t.json()\n\t\t\t\t\t.catch(() => ({ error: \"Unexpected error\" }));\n\t\t\t\tthrow new Error(error);\n\t\t\t}\n\n\t\t\t// Get audio data as a Blob and create a URL for it\n\t\t\tconst audioBlob = await res.blob();\n\t\t\tconst audioUrl = URL.createObjectURL(audioBlob);\n\n\t\t\t// Set the audio element's source and play the audio\n\t\t\tif (audioRef.current) {\n\t\t\t\taudioRef.current.src = audioUrl;\n\t\t\t\taudioRef.current.play();\n\t\t\t}\n\n\t\t\tsetText(\"\"); // Clear the textbox after playing\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Playback error:\", err);\n\t\t\tsetError(err.message || \"Something went wrong.\");\n\t\t} finally {\n\t\t\tsetLoading(false); // Reset loading state\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{/* Textarea for user to input affirmation */}\n\t\t\t<textarea\n\t\t\t\tclassName={styles.textbox}\n\t\t\t\tplaceholder=\"Type your affirmation here...\"\n\t\t\t\tvalue={text}\n\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t/>\n\t\t\t{/* Button to trigger text-to-speech */}\n\t\t\t<button className={styles.button} onClick={handlePlay} disabled={loading}>\n\t\t\t\t{loading ? \"Loading...\" : \"Play Voice\"}\n\t\t\t</button>\n\t\t\t{/* Display error message if any */}\n\t\t\t{error && <p className={styles.error}>{error}</p>}\n\t\t\t{/* Audio player to play the generated speech */}\n\t\t\t<audio ref={audioRef} className={styles.audio} controls />\n\t\t</div>\n\t);\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACvB,2BAA2B;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,mCAAmC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,gCAAgC;IAChC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,2CAA2C;IAC3C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAExB,sCAAsC;IACtC,MAAM,aAAa;QAClB,yCAAyC;QACzC,IAAI,CAAC,KAAK,IAAI,IAAI;YACjB,SAAS;YACT;QACD;QAEA,WAAW,OAAO,qBAAqB;QACvC,SAAS,KAAK,wBAAwB;QAEtC,IAAI;YACH,+CAA+C;YAC/C,MAAM,MAAM,MAAM,MAAM,uBAAuB;gBAC9C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAK;YAC7B;YAEA,iDAAiD;YACjD,IAAI,CAAC,IAAI,EAAE,EAAE;gBACZ,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IACtB,IAAI,GACJ,KAAK,CAAC,IAAM,CAAC;wBAAE,OAAO;oBAAmB,CAAC;gBAC5C,MAAM,IAAI,MAAM;YACjB;YAEA,mDAAmD;YACnD,MAAM,YAAY,MAAM,IAAI,IAAI;YAChC,MAAM,WAAW,IAAI,eAAe,CAAC;YAErC,oDAAoD;YACpD,IAAI,SAAS,OAAO,EAAE;gBACrB,SAAS,OAAO,CAAC,GAAG,GAAG;gBACvB,SAAS,OAAO,CAAC,IAAI;YACtB;YAEA,QAAQ,KAAK,kCAAkC;QAChD,EAAE,OAAO,KAAK;YACb,QAAQ,KAAK,CAAC,mBAAmB;YACjC,SAAS,IAAI,OAAO,IAAI;QACzB,SAAU;YACT,WAAW,QAAQ,sBAAsB;QAC1C;IACD;IAEA,qBACC,8OAAC;QAAI,WAAW,sIAAA,CAAA,UAAM,CAAC,SAAS;;0BAE/B,8OAAC;gBACA,WAAW,sIAAA,CAAA,UAAM,CAAC,OAAO;gBACzB,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;0BAGxC,8OAAC;gBAAO,WAAW,sIAAA,CAAA,UAAM,CAAC,MAAM;gBAAE,SAAS;gBAAY,UAAU;0BAC/D,UAAU,eAAe;;;;;;YAG1B,uBAAS,8OAAC;gBAAE,WAAW,sIAAA,CAAA,UAAM,CAAC,KAAK;0BAAG;;;;;;0BAEvC,8OAAC;gBAAM,KAAK;gBAAU,WAAW,sIAAA,CAAA,UAAM,CAAC,KAAK;gBAAE,QAAQ;;;;;;;;;;;;AAG1D","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/josephhong/The%20Art%20of%20Optimism/affirmations-app/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/josephhong/The%20Art%20of%20Optimism/affirmations-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///Users/josephhong/The%20Art%20of%20Optimism/affirmations-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}